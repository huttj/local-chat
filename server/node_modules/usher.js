"use strict";
const redis = require('shared-redis');

const clients = {};
const locations = {};

function enter(location, userId, socket) {
  // p2p messages
  if (!clients[userId]) {
    redis.subscribe(userId, message => socket.emit('message',message));
  }

  clients[userId] = {
    // Filter/block rules
    //filters,
    location,
    socket
  };

  if (!locations[location]) {
    locations[location] = new Map();

    // Chats for this location
    redis.subscribe(location, chat => {
      for (const userSocket of locations[location].values()) {
        userSocket.emit('chat', chat);
      }
    });
  }

  locations[location].set(userId, socket);
}

function leave(userId) {
  redis.unsubscribe(userId);
  try {
    const location = locations[clients[userId].location];
    location.delete(userId);
    if (location.size() === 0) {
      redis.unsubscribe(location);
    }
  } catch (e) {
    console.log(e);
  }
}

function sendChat(chat) {
  const userId   = chat.sender;
  const location = clients[userId].location;
  redis.publish(location, chat);
}

function sendMessage(message) {
  const userId      = message.sender;
  const recipientId = message.recipient;
  const location    = clients[userId].location;
  redis.publish(recipientId, message);
}

module.exports = {
  enter,
  leave,
  sendChat,
  sendMessage
};